Metadata-Version: 2.1
Name: src
Version: 0.0.1
Summary: A small package for Book Recommender System
Home-page: https://github.com/AashishPathak1/BookRecommenderSystem.git
Author: Aashish Pathak
Author-email: mr.aashishpathak.official@gmail.com
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: flask
Requires-Dist: numpy

ShowMyBooks - Book Recommendation System

Overview

This project presents a cutting-edge Book Recommendation System that leverages machine learning to deliver personalized book suggestions to users based on their unique preferences and reading habits.

Key Features

- Personalized Book Recommendations: Harnesses collaborative filtering and content-based filtering algorithms to generate accurate book suggestions.
- Comprehensive Dataset: Utilizes a large dataset from Kaggle, containing book information and user ratings.
- Full-Stack Development: Built using Flask for server-side logic, HTML, CSS, and JavaScript for the user interface, and Python libraries for data analysis and machine learning.
- Scalable Deployment: Successfully deployed on Render, ensuring high availability and scalability.

Technical Details

Data Ingestion

- Retrieved dataset from Kaggle
- Performed data preprocessing and feature engineering using Pandas, NumPy, and Scikit-learn

Recommendation Engine

- Implemented collaborative filtering and content-based filtering algorithms

Server-Side Logic

- Built backend using Flask

User Interface

- Crafted an intuitive and visually appealing UI with HTML, CSS, and JavaScript

Deployment

- Render: Successfully deployed the application on Render

Showcase

This project showcases my expertise in:

- Machine Learning
- Data Analysis
- Full-Stack Development
- Deployment of live applications that drive user engagement

Repository Contents

- (app.py): Flask application code
- data: Dataset and data processing scripts
- models: Machine learning model implementations
- templates: HTML templates for the user interface
- static: CSS and JavaScript files for the user interface

Getting Started

1. Clone the repository
2. Install dependencies using pip install -r requirements.txt
3. Run the application using python (python app.py)
4. Access the application at http://localhost:5000

I made some changes to make it easier to read and visualize, including:

- Using headings and subheadings to organize the content
- Adding bullet points to list key features and technical details
- Using bold text to highlight important information
- Adding a "Showcase" section to highlight your expertise
- Using a more concise and readable format for the repository contents and getting started sections
